//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "collection")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub created_at: Option<DateTimeWithTimeZone>,
    pub config_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::collection_product::Entity")]
    CollectionProduct,
    #[sea_orm(
        belongs_to = "super::config::Entity",
        from = "Column::ConfigId",
        to = "super::config::Column::Id",
        on_update = "NoAction",
        on_delete = "SetNull"
    )]
    Config,
}

impl Related<super::collection_product::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CollectionProduct.def()
    }
}

impl Related<super::config::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Config.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
