//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "config")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub name: String,
    pub created_at: Option<DateTimeWithTimeZone>,
    pub seller_types: Json,
    pub price_ranges: Json,
    pub minimum_star: i32,
    pub minimum_sold: i32,
    pub minimum_stock: i32,
    pub sort_by: String,
    pub shippings: Json,
    pub exclude_cod: bool,
    pub ban_keywords: Json,
    pub cities: Json,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::collection::Entity")]
    Collection,
}

impl Related<super::collection::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Collection.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
